name: 'Verify bindings syntax'

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Restore cache
      id: codegen-cache
      uses: actions/cache/restore@v3
      with:
        path: bin
        key: ${{ hashFiles('codegen/**/*.cpp') }}-${{ hashFiles('codegen/**/**.hpp') }}

    - name: Build Codegen binary
      if: steps.codegen-cache.outputs.cache-hit != 'true'
      run: |
        cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_INSTALL_PREFIX=./bin -B build
        cmake --build build --config RelWithDebInfo
        cmake --install build

    - name: Upload binary to cache
      if: steps.codegen-cache.outputs.cache-hit != 'true'
      uses: actions/cache/save@v3
      with:
        path: bin
        key: ${{ hashFiles('codegen/**/*.cpp') }}-${{ hashFiles('codegen/**/**.hpp') }}
      
    - name: Upload Codegen binary
      uses: actions/upload-artifact@v3
      with:
        name: Codegen
        path: bin/Codegen

  verify:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Download Codegen binary
      uses: actions/download-artifact@v3
      with:
        name: Codegen

    - name: Include extras files
      run: |
        echo "#include <GeometryDash-extras.bro>" >> bindings/2.200/Entry.bro
        # echo "#include <Cocos2d-extras.bro>" >> bindings/2.200/Entry.bro

    - name: Verify
      run: 'chmod +x ./Codegen && ./Codegen Win32 bindings/2.200 out'

  test-members:
    # dont bother running member test if broma isnt even valid
    needs: verify

    strategy:
      fail-fast: false
      matrix:
        config:
        - name: Windows
          os: windows-2019
          prefixes: ''
          extra_flags: -A win32
          
    name: Test Offsets ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}

    steps:
    - uses: actions/checkout@v4

    - uses: actions/checkout@v4
      with:
        repository: geode-sdk/geode
        path: geode

    - uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x86

    - name: Configure ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: ${{ matrix.config.os }}

    - name: Configure CMake
      run: >
        ${{ matrix.config.prefixes }} cmake -B build -S test/members
        -D GEODE_LOADER_PATH=${{ github.workspace }}/geode/loader
        -D GEODE_BINDINGS_REPO_PATH=${{ github.workspace }}
        ${{ matrix.config.extra_flags }} 
        -D GEODE_DISABLE_CLI_CALLS=ON 
      # -D CMAKE_C_COMPILER_LAUNCHER=ccache
      # -D CMAKE_CXX_COMPILER_LAUNCHER=ccache

    - name: Build member test
      run: |
        cmake --build build --config RelWithDebInfo --parallel --target TestMembers